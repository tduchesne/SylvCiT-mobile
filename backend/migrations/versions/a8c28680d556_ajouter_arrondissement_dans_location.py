"""ajouter arrondissement dans location

Revision ID: a8c28680d556
Revises: 4679ad617a63
Create Date: 2024-11-17 01:50:59.986755

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a8c28680d556'
down_revision = '4679ad617a63'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('location', schema=None) as batch_op:
        batch_op.add_column(sa.Column('region', sa.String(length=45), nullable=True))

    with op.batch_alter_table('tree', schema=None) as batch_op:
        batch_op.drop_constraint('fk_tree_id_location', type_='foreignkey')
        batch_op.drop_constraint('fk_tree_family', type_='foreignkey')
        batch_op.drop_constraint('fk_tree_functional_group', type_='foreignkey')
        batch_op.drop_constraint('fk_tree_genre', type_='foreignkey')
        batch_op.drop_constraint('fk_tree_type', type_='foreignkey')
        batch_op.create_foreign_key('fk_tree_functional_group', 'functional_group', ['id_functional_group'], ['id_functional_group'], referent_schema='inm5151_db')
        batch_op.create_foreign_key('fk_tree_family', 'family', ['id_family'], ['id_family'], referent_schema='inm5151_db')
        batch_op.create_foreign_key(None, 'type', ['id_type'], ['id_type'], referent_schema='inm5151_db')
        batch_op.create_foreign_key('fk_tree_id_location', 'location', ['id_location'], ['id_location'], referent_schema='inm5151_db')
        batch_op.create_foreign_key('fk_tree_genre', 'genre', ['id_genre'], ['id_genre'], referent_schema='inm5151_db')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tree', schema=None) as batch_op:
        batch_op.drop_constraint('fk_tree_genre', type_='foreignkey')
        batch_op.drop_constraint('fk_tree_id_location', type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint('fk_tree_family', type_='foreignkey')
        batch_op.drop_constraint('fk_tree_functional_group', type_='foreignkey')
        batch_op.create_foreign_key('fk_tree_type', 'type', ['id_type'], ['id_type'])
        batch_op.create_foreign_key('fk_tree_genre', 'genre', ['id_genre'], ['id_genre'])
        batch_op.create_foreign_key('fk_tree_functional_group', 'functional_group', ['id_functional_group'], ['id_functional_group'])
        batch_op.create_foreign_key('fk_tree_family', 'family', ['id_family'], ['id_family'])
        batch_op.create_foreign_key('fk_tree_id_location', 'location', ['id_location'], ['id_location'])

    with op.batch_alter_table('location', schema=None) as batch_op:
        batch_op.drop_column('region')

    # ### end Alembic commands ###
