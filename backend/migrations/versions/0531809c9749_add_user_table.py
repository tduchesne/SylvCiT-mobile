"""Add user table

Revision ID: 0531809c9749
Revises: b38d020b3ac8
Create Date: 2024-10-07 20:29:34.098832

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '0531809c9749'
down_revision = 'b38d020b3ac8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    with op.batch_alter_table('tree', schema=None) as batch_op:
        batch_op.drop_constraint('fk_tree_functional_group', type_='foreignkey')
        batch_op.drop_constraint('fk_tree_id_location', type_='foreignkey')
        batch_op.drop_constraint('fk_tree_genre', type_='foreignkey')
        batch_op.drop_constraint('fk_tree_family', type_='foreignkey')
        batch_op.drop_constraint('fk_tree_type', type_='foreignkey')
        batch_op.create_foreign_key('fk_tree_family', 'family', ['id_family'], ['id_family'], referent_schema='inm5151_db')
        batch_op.create_foreign_key('fk_tree_functional_group', 'functional_group', ['id_functional_group'], ['id_functional_group'], referent_schema='inm5151_db')
        batch_op.create_foreign_key('fk_tree_genre', 'genre', ['id_genre'], ['id_genre'], referent_schema='inm5151_db')
        batch_op.create_foreign_key('fk_tree_id_location', 'location', ['id_location'], ['id_location'], referent_schema='inm5151_db')
        batch_op.create_foreign_key('fk_tree_type', 'type', ['id_type'], ['id_type'], referent_schema='inm5151_db')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tree', schema=None) as batch_op:
        batch_op.drop_constraint('fk_tree_type', type_='foreignkey')
        batch_op.drop_constraint('fk_tree_id_location', type_='foreignkey')
        batch_op.drop_constraint('fk_tree_genre', type_='foreignkey')
        batch_op.drop_constraint('fk_tree_functional_group', type_='foreignkey')
        batch_op.drop_constraint('fk_tree_family', type_='foreignkey')
        batch_op.create_foreign_key('fk_tree_type', 'type', ['id_type'], ['id_type'])
        batch_op.create_foreign_key('fk_tree_family', 'family', ['id_family'], ['id_family'])
        batch_op.create_foreign_key('fk_tree_genre', 'genre', ['id_genre'], ['id_genre'])
        batch_op.create_foreign_key('fk_tree_id_location', 'location', ['id_location'], ['id_location'])
        batch_op.create_foreign_key('fk_tree_functional_group', 'functional_group', ['id_functional_group'], ['id_functional_group'])

    op.create_table('user',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('password', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('role', mysql.TINYINT(display_width=1), autoincrement=False, nullable=False),
    sa.CheckConstraint('(`role` in (1,2))', name='user_chk_1'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    # ### end Alembic commands ###
