"""synchronisation add_tree

Revision ID: e195855c83cc
Revises: d74129c4abc4
Create Date: 2024-10-30 20:40:58.013091

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'e195855c83cc'
down_revision = 'd74129c4abc4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tree', schema=None) as batch_op:
        batch_op.add_column(sa.Column('no_emp', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('adresse', sa.String(length=45), nullable=True))
        batch_op.add_column(sa.Column('dhp', sa.Integer(), nullable=True))
        batch_op.alter_column('date_plantation',
               existing_type=sa.DATE(),
               nullable=True)
        batch_op.drop_index('fk_tree_family_idx')
        batch_op.drop_index('fk_tree_functional_group_idx')
        batch_op.drop_index('fk_tree_genre_idx')
        batch_op.drop_index('fk_tree_id_location_idx')
        batch_op.drop_index('fk_tree_type_idx')
        batch_op.create_unique_constraint(None, ['no_emp'])
        batch_op.drop_constraint('fk_tree_family', type_='foreignkey')
        batch_op.drop_constraint('fk_tree_id_location', type_='foreignkey')
        batch_op.drop_constraint('fk_tree_genre', type_='foreignkey')
        batch_op.drop_constraint('fk_tree_type', type_='foreignkey')
        batch_op.drop_constraint('fk_tree_functional_group', type_='foreignkey')
        batch_op.create_foreign_key(None, 'functional_group', ['id_functional_group'], ['id_functional_group'], referent_schema='inm5151_db')
        batch_op.create_foreign_key(None, 'location', ['id_location'], ['id_location'], referent_schema='inm5151_db')
        batch_op.create_foreign_key(None, 'type', ['id_type'], ['id_type'], referent_schema='inm5151_db')
        batch_op.create_foreign_key(None, 'genre', ['id_genre'], ['id_genre'], referent_schema='inm5151_db')
        batch_op.create_foreign_key(None, 'family', ['id_family'], ['id_family'], referent_schema='inm5151_db')
        batch_op.drop_column('details_url')

    with op.batch_alter_table('tree_hors_rue', schema=None) as batch_op:
        batch_op.drop_constraint('tree_hors_rue_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'tree_search', ['no_emp'], ['no_emp'], referent_schema='inm5151_db')

    with op.batch_alter_table('tree_rue', schema=None) as batch_op:
        batch_op.drop_constraint('tree_rue_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'tree_search', ['no_emp'], ['no_emp'], referent_schema='inm5151_db')

    with op.batch_alter_table('tree_search', schema=None) as batch_op:
        batch_op.drop_constraint('tree_search_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'nom_tree', ['essence_latin'], ['essence_latin'], referent_schema='inm5151_db')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tree_search', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('tree_search_ibfk_1', 'nom_tree', ['essence_latin'], ['essence_latin'])

    with op.batch_alter_table('tree_rue', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('tree_rue_ibfk_1', 'tree_search', ['no_emp'], ['no_emp'])

    with op.batch_alter_table('tree_hors_rue', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('tree_hors_rue_ibfk_1', 'tree_search', ['no_emp'], ['no_emp'])

    with op.batch_alter_table('tree', schema=None) as batch_op:
        batch_op.add_column(sa.Column('details_url', mysql.VARCHAR(length=150), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_tree_functional_group', 'functional_group', ['id_functional_group'], ['id_functional_group'])
        batch_op.create_foreign_key('fk_tree_type', 'type', ['id_type'], ['id_type'])
        batch_op.create_foreign_key('fk_tree_genre', 'genre', ['id_genre'], ['id_genre'])
        batch_op.create_foreign_key('fk_tree_id_location', 'location', ['id_location'], ['id_location'])
        batch_op.create_foreign_key('fk_tree_family', 'family', ['id_family'], ['id_family'])
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('fk_tree_type_idx', ['id_type'], unique=False)
        batch_op.create_index('fk_tree_id_location_idx', ['id_location'], unique=False)
        batch_op.create_index('fk_tree_genre_idx', ['id_genre'], unique=False)
        batch_op.create_index('fk_tree_functional_group_idx', ['id_functional_group'], unique=False)
        batch_op.create_index('fk_tree_family_idx', ['id_family'], unique=False)
        batch_op.alter_column('date_plantation',
               existing_type=sa.DATE(),
               nullable=False)
        batch_op.drop_column('dhp')
        batch_op.drop_column('adresse')
        batch_op.drop_column('no_emp')

    # ### end Alembic commands ###
